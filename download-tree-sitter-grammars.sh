#!/usr/bin/env bash

# This script is totally generated by LLM.

set -euo pipefail

# ============================================================
# Download and extract the latest Tree-sitter grammar releases
# Usage:
#   ./download-treesitter.sh [TARGET_DIR]
#
# Example:
#   ./download-treesitter.sh ./grammars
# ============================================================

# List of Tree-sitter grammar repositories to download
repos=(
  "tree-sitter/tree-sitter-c"
  "tree-sitter/tree-sitter-cpp"
  "tree-sitter/tree-sitter-json"
)

# Use the first argument as target directory, or default if not provided
TARGET_DIR="${1:-tree-sitter-grammars}"

# Create and enter the target directory
mkdir -p "$TARGET_DIR"
cd "$TARGET_DIR"

# Download and extract the latest release for each repository
for repo in "${repos[@]}"; do
  name=$(basename "$repo")
  echo ">>> Fetching latest release for $repo"

  # Fetch the latest release tarball URL from GitHub API
  url=$(curl -s "https://api.github.com/repos/$repo/releases/latest" \
    | grep "tarball_url" \
    | head -n 1 \
    | cut -d '"' -f 4)

  if [[ -z "$url" ]]; then
    echo "!!! Failed to find release for $repo"
    continue
  fi

  echo ">>> Downloading $url"
  curl -L "$url" -o "${name}.tar.gz"

  # Extract the tarball into a temporary directory
  tmpdir=$(mktemp -d)
  tar -xzf "${name}.tar.gz" -C "$tmpdir"

  # Move extracted files to a clean folder named after the repo
  rm -rf "$name"
  mv "$tmpdir"/* "$name"

  echo ">>> Extracted to: $(realpath "$name")"

  # Clean up temporary files
  rm -rf "$tmpdir" "${name}.tar.gz"
done

echo "âœ… All grammars downloaded to $(realpath "$TARGET_DIR")"
